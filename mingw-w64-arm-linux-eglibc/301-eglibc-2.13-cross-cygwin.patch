# eglibc-2.13/{sunrpc,timezone} is now compatible with cross-compiling from Cygwin

--- a/sunrpc/Makefile
+++ b/sunrpc/Makefile
@@ -138,6 +138,22 @@
 
 include ../Rules
 
+OS?= $(shell uname)
+ifeq	($(OS),Darwin)
+CROSSRPCLDFLAGS=-L/opt/local/lib -lintl
+endif
+ifneq	(,$(findstring Windows_NT,$(OS)))
+# cygwin!
+CROSSRPCLDFLAGS=-L/usr/lib -lintl -liberty
+endif
+ifneq	(,$(findstring CYGWIN_NT,$(OS)))
+# cygwin!
+CROSSRPCLDFLAGS=-L/usr/lib -lintl -liberty
+endif
+ifeq	($(OS),FreeBSD)
+CROSSRPCLDFLAGS=-L/usr/local/lib -lintl
+endif
+
 $(objpfx)rpcgen: $(addprefix $(objpfx),$(rpcgen-objs)) \
   $(sort $(filter $(common-objpfx)libc%,$(link-libc))) \
   $(addprefix $(csu-objpfx),start.o) $(+preinit) $(+postinit)
@@ -148,7 +164,7 @@
 		$(OUTPUT_OPTION) $(compile-mkdep-flags)
 
 $(objpfx)cross-rpcgen: $(addprefix $(objpfx)cross-,$(rpcgen-objs))
-	gcc $^ -o $@
+	gcc $^ $(CROSSRPCLDFLAGS) -o $@
 
 # This makes sure -DNOT_IN_libc is passed for all these modules.
 cpp-srcs-left := $(rpcgen-objs:.o=.c)
--- a/sunrpc/rpc/types.h
+++ b/sunrpc/rpc/types.h
@@ -69,6 +69,7 @@
 #include <sys/types.h>
 #endif
 
+/*
 #ifndef __u_char_defined
 typedef __u_char u_char;
 typedef __u_short u_short;
@@ -84,6 +85,7 @@
 typedef __caddr_t caddr_t;
 # define __daddr_t_defined
 #endif
+*/
 
 #include <sys/time.h>
 #include <sys/param.h>
--- a/timezone/Makefile
+++ b/timezone/Makefile
@@ -1,4 +1,4 @@
-# Copyright (C) 1998,1999,2000,2002,2005,2007 Free Software Foundation, Inc.
+# Copyright (C) 1998-2000,2002,2005,2007,2012 Free Software Foundation, Inc.
 # This file is part of the GNU C Library.
 
 # The GNU C Library is free software; you can redistribute it and/or
@@ -12,32 +12,26 @@
 # Lesser General Public License for more details.
 
 # You should have received a copy of the GNU Lesser General Public
-# License along with the GNU C Library; if not, write to the Free
-# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
-# 02111-1307 USA.
+# License along with the GNU C Library; if not, see
+# <http://www.gnu.org/licenses/>.
 
 #
 #	Makefile for timezone information
 #
 subdir	:= timezone
 
-distribute := tzfile.h private.h scheck.c ialloc.c yearistype	\
-	      iso3166.tab zone.tab tzselect.ksh checktab.awk	\
-	      README
-
 extra-objs := scheck.o ialloc.o
 
 others	:= zdump zic
 tests	:= test-tz tst-timezone
 
+# pacificnew doesn't compile; if it is to be used, it should be included in
+# northamerica.
 tzbases := africa antarctica asia australasia europe northamerica \
 	   southamerica etcetera factory \
 	   solar87 solar88 solar89
 tzlinks := backward systemv
 tzfiles := $(tzbases) $(tzlinks)
-# pacificnew doesn't compile; if it is to be used, it should be included in
-# northamerica.
-distribute += $(tzfiles) leapseconds pacificnew simplebackw
 
 generated := $(addprefix z.,$(tzfiles))
 install-sbin := zic zdump
@@ -50,32 +44,7 @@
 
 CPPFLAGS-zic = -DNOT_IN_libc
 
-# z.* use this variable.
-define nl
-
-
-endef
-ifndef avoid-generated
-ifndef inhibit_timezone_rules
--include $(addprefix $(objpfx)z.,$(tzfiles))
-endif
-endif
-
-# Make these absolute file names.
-installed-localtime-file := $(firstword $(filter /%,$(inst_localtime-file)) \
-					$(addprefix $(inst_zonedir)/, \
-						    $(localtime-file)))
-installed-posixrules-file := $(firstword $(filter /%,$(posixrules-file)) \
-					 $(addprefix $(inst_zonedir)/, \
-						     $(posixrules-file)))
-
-install-others = $(addprefix $(inst_zonedir)/,$(zonenames) \
-					      $(zonenames:%=posix/%) \
-					      $(zonenames:%=right/%)) \
-		 $(installed-localtime-file) $(installed-posixrules-file)
-
 ifeq ($(have-ksh),yes)
-install-others += $(inst_zonedir)/iso3166.tab $(inst_zonedir)/zone.tab
 install-bin-script = tzselect
 generated += tzselect
 endif
@@ -83,109 +52,16 @@
 include ../Rules
 
 
-$(tzfiles:%=$(objpfx)z.%): $(objpfx)z.%: % Makefile
-# Kludge alert: we use an implicit rule (in what we are generating here)
-# because that is the only way to tell Make that the one command builds all
-# the files.
-# The extra kludge for the $(tzlinks) files is necessary since running zic
-# this file requires all other files to exist.  Blech!
-	$(make-target-directory)
-	(echo 'define $*-zones'						    ;\
-	 $(AWK) '$$1 == "Zone" { print $$2 } $$1 == "Link" { print $$3 }' $^ ;\
-	 echo 'endef'							    ;\
-	 echo '$*-zones := $$(subst $$(nl), ,$$($*-zones))'		    ;\
-	 echo 'ifdef $*-zones'						    ;\
-	 if test x$(findstring $*, $(tzlinks)) != x; then		     \
-	   echo '$$(addprefix $$(inst_zonedir)/right/,$$($*-zones)): \';\
-	   echo '$$(foreach t,$$(tzbases),$$(addprefix $$(inst_zonedir)/right/,$$($$t-zones)))' ;\
-	   echo '$$(addprefix $$(inst_zonedir)/posix/,$$($*-zones)): \';\
-	   echo '$$(foreach t,$$(tzbases),$$(addprefix $$(inst_zonedir)/posix/,$$($$t-zones)))' ;\
-	   echo '$$(addprefix $$(inst_zonedir)/,$$($*-zones)): \'	    ;\
-	   echo '$$(foreach t,$$(tzbases),$$(addprefix $$(inst_zonedir)/,$$($$t-zones)))' ;\
-	 fi								    ;\
-	 echo '$$(addprefix $$(dir $$(inst_zonedir))zone%/right/,$$($*-zones)): \' ;) > $@.new
-
-ifeq (no,$(cross-compiling))
-	(echo '$< $$(objpfx)zic leapseconds yearistype'			    ;) >> $@.new
-else
-	(echo '$< $$(objpfx)cross-zic leapseconds yearistype'		    ;) >> $@.new
-endif
-
-	(echo '	$$(tzcompile)'						    ;\
-	 echo '$$(addprefix $$(dir $$(inst_zonedir))zone%/posix/,$$($*-zones)): \' ;) >> $@.new
-
-ifeq (no,$(cross-compiling))
-	(echo '$< $$(objpfx)zic /dev/null yearistype'			    ;) >> $@.new
-else
-	(echo '$< $$(objpfx)cross-zic /dev/null yearistype'		    ;) >> $@.new
-endif
-
-	(echo '	$$(tzcompile)'						    ;\
-	 echo '$$(addprefix $$(dir $$(inst_zonedir))zone%/,$$($*-zones)): \' ;) >> $@.new
-
-ifeq (no,$(cross-compiling))
-	(echo '$< $$(objpfx)zic $$(leapseconds) yearistype'		    ;) >> $@.new
-else
-	(echo '$< $$(objpfx)cross-zic $$(leapseconds) yearistype'	    ;) >> $@.new
-endif
-
-	(echo '	$$(tzcompile)'						    ;\
-	 echo 'endif'							    ;\
-	 echo 'zonenames := $$(zonenames) $$($*-zones)'			    ;) >> $@.new
-	mv $@.new $@
-
-.PHONY: echo-zonenames
-echo-zonenames:
-	@echo 'Known zones: $(zonenames)'
-
-
-# We have to use `-d $(inst_zonedir)' to explictly tell zic where to
-# place the output files although $(zonedir) is compiled in.  But the
-# user might have set $(install_root) on the command line of `make install'.
-ifeq (no,$(cross-compiling))
-zic-cmd = $(built-program-cmd) -d $(inst_zonedir)
-else
-zic-cmd = $(objpfx)cross-zic -d $(inst_zonedir)
-endif
-tzcompile = $(zic-cmd)$(target-zone-flavor) -L $(word 3,$^) \
-	    -y $(dir $(word 4,$^))$(notdir $(word 4,$^)) $<
-
-# The source files specify the zone names relative to the -d directory,
-# so for the posix/ and right/ flavors we need to pass -d $(inst_zonedir)/posix
-# and the like.  This magic extracts /posix or /right if it's the first
-# component after $(inst_zonedir) in the target name $@.
-target-zone-flavor = $(filter /posix /right, \
-			      /$(firstword $(subst /, , \
-					  $(patsubst $(inst_zonedir)/%,%,$@))))
-
-ifdef localtime
-$(installed-localtime-file): $(inst_zonedir)/$(localtime) $(objpfx)zic \
-			     $(+force)
-	$(make-target-directory)
-	if test -r $@; then \
-	  echo Site timezone NOT reset to Factory.; \
-	else \
-	  rm -f $@T; \
-	  $(SHELL) $(..)scripts/rellns-sh $< $@T; \
-	  mv -f $@T $@; \
-	fi
-endif
-ifdef posixrules
-$(installed-posixrules-file): $(inst_zonedir)/$(posixrules) $(objpfx)zic \
-			      $(+force)
-	$(zic-cmd) -p $(posixrules)
-endif
-
 zic-objs = zic.o ialloc.o scheck.o
 
 $(objpfx)zic: $(addprefix $(objpfx), $(zic-objs))
 
 $(addprefix $(objpfx)cross-,$(zic-objs)): $(objpfx)cross-%.o: %.c
-	gcc $< -c $(OUTPUT_OPTION) $(CFLAGS-$*.c) $(CPPFLAGS-$*) \
+	$(BUILD_CC) $< -c $(OUTPUT_OPTION) $(CFLAGS-$*.c) $(CPPFLAGS-$*) \
 		-DCROSS_ZIC $(compile-mkdep-flags)
 
 $(objpfx)cross-zic: $(addprefix $(objpfx)cross-,$(zic-objs))
-	gcc $(addprefix $(objpfx)cross-,$(zic-objs)) -o $@
+	$(BUILD_CC) $(addprefix $(objpfx)cross-,$(zic-objs)) -o $@
 
 tz-cflags = -DTZDIR='"$(zonedir)"' \
 	    -DTZDEFAULT='"$(localtime-file)"' \
@@ -256,7 +132,3 @@
 	    -e 's%@REPORT_BUGS_TO@%$(REPORT_BUGS_TO)%g' < $< > $@.new
 	chmod 555 $@.new
 	mv -f $@.new $@
-
-$(addprefix $(inst_zonedir)/,iso3166.tab zone.tab): \
-    $(inst_zonedir)/%: % $(+force)
-	$(do-install)
